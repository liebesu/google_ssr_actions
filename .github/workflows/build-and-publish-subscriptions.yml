name: build-and-publish-subscriptions
on:
  push:
    branches: [ main ]
  schedule:
    - cron: "0 */3 * * *"
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: requirements_scraper.txt

      - name: Install deps
        run: |
          pip install -r requirements_scraper.txt

      - name: Prepare secrets
        run: |
          if [ -n "${{ secrets.SCRAPER_KEYS }}" ]; then
            printf "%s\n" "${{ secrets.SCRAPER_KEYS }}" > keys
          fi
          if [ -n "${{ secrets.SCRAPER_CONFIG_JSON }}" ]; then
            printf "%s\n" "${{ secrets.SCRAPER_CONFIG_JSON }}" > scraper_config.json
          fi
          # prepare auth env from variables/secrets
          if [ -n "${{ vars.AUTH_PLAIN }}" ]; then
            echo "AUTH_PLAIN from vars configured"
          fi
          if [ -n "${{ secrets.AUTH_SHA256 }}" ]; then
            echo "AUTH_SHA256 from secrets configured"
          fi
          if [ -n "${{ vars.AUTH_SHA256 }}" ]; then
            echo "AUTH_SHA256 from vars configured"
          fi
          if [ -n "${{ vars.AUTH_USER }}" ]; then
            echo "AUTH_USER from vars configured"
          fi
          if [ -n "${{ secrets.AUTH_USER }}" ]; then
            echo "AUTH_USER from secrets configured"
          fi

      - name: Generate subscriptions
        run: |
          mkdir -p dist
          # Disable proxy in CI and emit index/health to avoid 404
          export DISABLE_PROXY=1
          # Pass optional auth envs
          if [ -n "${{ vars.AUTH_PLAIN }}" ]; then export AUTH_PLAIN="${{ vars.AUTH_PLAIN }}"; fi
          if [ -n "${{ secrets.AUTH_SHA256 }}" ]; then export AUTH_SHA256="${{ secrets.AUTH_SHA256 }}"; fi
          if [ -n "${{ vars.AUTH_SHA256 }}" ]; then export AUTH_SHA256="${{ vars.AUTH_SHA256 }}"; fi
          if [ -n "${{ vars.AUTH_USER }}" ]; then export AUTH_USER="${{ vars.AUTH_USER }}"; fi
          if [ -n "${{ secrets.AUTH_USER }}" ]; then export AUTH_USER="${{ secrets.AUTH_USER }}"; fi
          python aggregator_cli.py --output-dir dist --max 1200 --dedup --public-base https://liebesu.github.io/google_ssr_actions --github-discovery --emit-health --emit-index

      - name: Persist history back to repo
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add data/*.json api_urls*.json discovered_urls.json visited_urls.json || true
          git diff --cached --quiet || git commit -m "chore(data): update history/live/discovered urls [skip ci]"
          git push

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4


